<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    x:Class="Common.WindowStyle.WindowCustomBorderStyle">

    <ResourceDictionary.MergedDictionaries>
    </ResourceDictionary.MergedDictionaries>

    <!-- Constantes -->
    <CornerRadius x:Key="WindowCornerRadius">3,3,3,3</CornerRadius>
    <CornerRadius x:Key="TitleCorderRadius">3,3,0,0</CornerRadius>

    <!-- Base title button style -->
    <Style x:Key="TitleBarRadialButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="MinHeight" Value="13" />
        <Setter Property="MinWidth" Value="13" />
        <Setter Property="Opacity" Value="1" />
    </Style>

    <!-- Close Button -->
    <Style x:Key="CloseRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>  
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="ButtonRoot">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" 
                                              Color="LightGray" 
                                              BlurRadius="0"/>
                        </Grid.Effect>

                        <Image x:Name="Image" 
                               Source="Images\Adobe\Close Normal.png" 
                               Width="48" 
                               Height="20">
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" 
                                    Property="Source" 
                                    Value="Images\Adobe\Close Highlighted.png" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="15" Duration="0:0:0.3" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="1" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="0" Duration="0:0:0.2" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="0.9" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize Button -->
    <Style x:Key="MinimizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="Image" 
                               Source="Images\Adobe\Minimize Normal.png" 
                               Width="29" 
                               Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" 
                                    Property="Source" 
                                    Value="Images\Adobe\Minimize Highlighted.png" />
                        </Trigger>
                        <Trigger Property="IsPressed" 
                                 Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Maximize Button -->
    <Style x:Key="MaximizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="Image" 
                               Source="Images\Adobe\Maximize Normal.png" 
                               Width="26" 
                               Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" 
                                    Property="Source" 
                                    Value="Images\Adobe\Maximize Highlighted.png" />
                        </Trigger>
                        <Trigger Property="IsPressed" 
                                 Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border defining the frame of the Window -->
    <Style x:Key="WindowBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="{StaticResource WindowCornerRadius}" />
        <Setter Property="Background" Value="#484848" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" 
                         Value="Maximized">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="TitleBarBackgroundBorder" TargetType="Border">
        <Setter Property="Height" Value="30" />
        <Setter Property="CornerRadius" Value="{StaticResource TitleCorderRadius}" />
        <Setter Property="Background"   Value="{DynamicResource TitleBarBackgroundBrush}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" 
                         Value="Maximized">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>


    <Style x:Key="RectBorderStyle" TargetType="Rectangle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Fill" Value="Transparent" />
    </Style>

    <!-- Window Template Dialogue box -->
    <ControlTemplate x:Key="WindowTemplateDialogue" 
                     TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </ControlTemplate.Resources>

        <Grid x:Name="WindowRoot" 
              Style="{DynamicResource WindowRoot}" 
              SizeChanged="OnWindowSizeChanged" 
              Loaded="OnWindowLoaded">
            
            <Border x:Name="WindowFrame" 
                    Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout">

                    <!-- The title bar. -->
                    <Grid Margin="0" VerticalAlignment="Top">

                        <Border Style="{DynamicResource TitleBarBackgroundBorder}" 
                                 MouseLeftButtonDown="MoveWindow" 
                                MouseMove="OnBorderMouseMove" />

                        <!-- Top Grip. This is here to put it under the butters. -->
                        <Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Top"/>

                        <DockPanel LastChildFill="True">

                            <Button DockPanel.Dock="Right" 
                                    Style="{StaticResource CloseRadialButton}"    
                                    VerticalAlignment="Top"
                                    Margin="0,0,12,0"
                                    Click="CloseWindow" />

                            <TextBlock DockPanel.Dock="Left"
                                       Foreground="{DynamicResource TextBrush}" 
                                       Text="{TemplateBinding Title}"
                                       Margin="14,0,0,0"
                                       HorizontalAlignment="Left" 
                                       FontWeight="Normal" 
                                       MouseLeftButtonDown="MoveWindow"/>
                        </DockPanel>
                    </Grid>

                    <!-- The window content. -->
                    <Border x:Name="WindowContent" 
                            Margin="0,30,0,0">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>

                    <!-- Grips -->
                    <!-- Sides -->
                    <Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Left"/>
                    <Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Right"/>
                    <Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Bottom"/>
                    <!--Corners -->
                    <Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                    <Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <!-- Window Style -->

    <!-- Window Template Main Window -->
    <ControlTemplate x:Key="WindowTemplateTimers" 
                     TargetType="{x:Type Window}">
        
        <ControlTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </ControlTemplate.Resources>

        <Grid x:Name="WindowRoot" 
              Style="{DynamicResource WindowRoot}" 
              SizeChanged="OnWindowSizeChanged" 
              Loaded="OnWindowLoaded">
            <Border x:Name="WindowFrame" 
                    Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout">

                    <!-- The title bar. -->
                    <Grid Margin="0" VerticalAlignment="Top">

                        <Border Style="{DynamicResource TitleBarBackgroundBorder}" 
                                 MouseLeftButtonDown="MoveWindow" 
                                MouseMove="OnBorderMouseMove" />

                        <!-- Top Grip. This is here to put it under the butters. -->
                        <Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Top"/>

                       
                        <DockPanel LastChildFill="True">                     

                            
                            <Button DockPanel.Dock="Right" 
                                    Style="{StaticResource CloseRadialButton}"    
                                    VerticalAlignment="Top"
                                    Margin="0,0,12,0"
                                    Click="CloseWindow" />

                            <Button DockPanel.Dock="Right" 
                                    Style="{StaticResource MaximizeRadialButton}" 
                                    VerticalAlignment="Top"
                                    Margin="0"
                                    Click="MaximizeWindow" />

                            <Button DockPanel.Dock="Right" 
                                    Style="{StaticResource MinimizeRadialButton}" 
                                    VerticalAlignment="Top"
                                    Margin="6,0,0,0"
                                    Click="MinimizeWindow" />
                            
                            
                            <TextBlock DockPanel.Dock="Left"
                                       Foreground="{DynamicResource TextBrush}" 
                                       Text="{TemplateBinding Title}"
                                       Margin="14,0,0,0"
                                       HorizontalAlignment="Left" 
                                       FontWeight="Normal" 
                                       MouseLeftButtonDown="MoveWindow"/>
                       
                        </DockPanel>

                    </Grid>

                    <!-- The window content. -->
                    <Border x:Name="WindowContent" 
                            Margin="0,30,0,0">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>

                    <!-- Grips -->
                    <!-- Sides -->
                    <Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Left"/>
                    <Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Right"/>
                    <Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Bottom"/>
                    <!--Corners -->
                    <Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                    <Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <!-- Window Style -->

    <!-- ISSUE WITH XP : http://connect.microsoft.com/VisualStudio/feedback/details/369500/problem-with-the-allowtransparency-and-popup-controls-in-wpf -->
    <!-- Hotfix : http://support.microsoft.com/kb/943326 -->
    <Style x:Key="SkinWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <!--<Setter Property="MinHeight" Value="150"/>
        <Setter Property="MinWidth" Value="250"/>-->
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template" Value="{StaticResource WindowTemplateDialogue}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
 
    <Style x:Key="SkinWindowTimersStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <!--<Setter Property="MinHeight" Value="150"/>
        <Setter Property="MinWidth" Value="250"/>-->
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template" Value="{StaticResource WindowTemplateTimers}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
            </DataTrigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>